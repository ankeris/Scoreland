{"version":3,"sources":["firebase.ts","containers/Header.tsx","routes/Auth.tsx","components/Loading.tsx","routes/Login.tsx","gamesLogic/selfpong/selfpong.ts","gamesLogic/scorebird/sketch.ts","components/GameButton.tsx","containers/GameLibrary.tsx","routes/Library.tsx","motivationalQuotes.ts","components/LinkButton.tsx","gamesLogic/scorebird/pipe.ts","gamesLogic/scorebird/bird.ts","gamesLogic/scoresnake/sketch.ts","routes/GamePage.tsx","routes/Register.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","Firebase","Object","classCallCheck","this","auth","db","app","initializeApp","firestore","enablePersistence","setPersistence","Auth","Persistence","SESSION","email","password","signInWithEmailAndPassword","console","log","signOut","name","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","doc","highestScore","highestScorer","collection","update","_this","Promise","resolve","onAuthStateChanged","_id","_this2","reject","get","then","snapshot","callback","onSnapshot","querySnapshot","newArr","forEach","item","data","id","push","Header","props","react_default","a","createElement","className","src","alt","react_router_dom","to","authed","Fragment","onClick","_logout","apply","arguments","localStorage","getItem","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","logout","setAuth","stop","Loading","SignIn","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","setEmail","_useState5","_useState6","setPassword","onSubmit","e","preventDefault","_login","login","type","value","onChange","target","pathname","setItem","user","history","t0","alert","playRect","bird","GameButton","_ref","game","complexityColor","complexity","state","imagelink","GameLibrary","gamesExist","games","length","map","components_GameButton","key","App","possibleConstructorReturn","getPrototypeOf","call","getAll","subscribeTo","gameArr","setState","containers_GameLibrary","href","rel","Component","motivationalQuotes","Motivation","quotesArr","getRandomQuote","Math","floor","random","LinkButton","text","link","modifier","concat","points","balls","startGame","selfpong","finalScore","p5","p","pointsCounter","textAlign","LEFT","textSize","CENTER","width","height","fill","setup","createCanvas","parent","Rectangle","mousePressed","Ball","mouseX","mouseY","draw","background","displayRect","keyIsDown","fixed","i","display","move","ballWallHit","bounceOfRectangle","xas","yas","w","h","xspeed","yspeed","x","y","createClass","rectMode","rect","RIGHT_ARROW","LEFT_ARROW","constrain","r","ellipse","remove","clear","Pipe","spacing","top","bottom","speed","highlight","potential","Bird","gravity","lift","velocity","pipes","scorebird","show","hits","offscreen","splice","isPoint","frameCount","keyPressed","up","numSegments","direction","diff","xCor","yCor","xFruit","yFruit","score","scuffedsnake","updateFruitCoordinates","frameRate","stroke","strokeWeight","line","updateSnakeCoordinates","snakeHeadX","snakeHeadY","checkSnakeCollision","noLoop","point","unshift","keyCode","GamePage","gameInfo","gameLost","tryUpdateScore","updateHighestScore","clearCanvas","gameCanvas","gameId","match","params","getOneById","build_default","end","prefix","Register","nickname","setNickname","_onRegister","onRegister","register","replace","PrivateRoute","component","rest","objectWithoutProperties","react_router","assign","render","from","location","Scoreland","userAuthenticated","setUserAuthenticated","firebaseLoaded","setFirebaseLoaded","useEffect","window","addEventListener","updateOnlineStatus","event","NotificationManager","warning","success","isInitialized","containers_Header","path","exact","Library","lib","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16a89bc3.chunk.js","sourcesContent":["import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firebase-firestore\";\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIRE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIRE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIRE_DB_URL,\r\n    projectId: process.env.REACT_APP_FIRE_PRJ_ID,\r\n    storageBucket: \"\",\r\n    messagingSenderId: process.env.REACT_APP_FIRE_MSG_SENDER_ID\r\n};\r\n\r\nclass Firebase {\r\n    private auth;\r\n    private db;\r\n    constructor() {\r\n        app.initializeApp(config);\r\n        this.auth = app.auth();\r\n        app.firestore().enablePersistence()\r\n        this.db = app.firestore();\r\n        this.auth.setPersistence(app.auth.Auth.Persistence.SESSION);\r\n    }\r\n\r\n    login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    logout() {\r\n        console.log(\"logging out . . .\");\r\n        return this.auth.signOut();\r\n    }\r\n\r\n    async register(name, email, password) {\r\n        await this.auth.createUserWithEmailAndPassword(email, password);\r\n        return this.auth.currentUser.updateProfile({\r\n            displayName: name\r\n        });\r\n    }\r\n\r\n    updateHighestScore(doc, highestScore, highestScorer) {\r\n        return this.db\r\n            .collection(\"games\")\r\n            .doc(doc)\r\n            .update({ highestScore, highestScorer });\r\n    }\r\n\r\n    isInitialized() {\r\n        return new Promise<boolean>(resolve => {\r\n            this.auth.onAuthStateChanged(resolve);\r\n        });\r\n    }\r\n\r\n    getCurrentUsername() {\r\n        console.log(this.auth.currentUser);\r\n        return this.auth.currentUser && this.auth.currentUser.displayName;\r\n    }\r\n\r\n    // async getCurrentUserQuote() {\r\n    // \tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\r\n    // \treturn quote.get('quote')\r\n    // }\r\n    getOneById(collection: string, _id: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            this.db\r\n                .collection(collection)\r\n                .doc(_id)\r\n                .get()\r\n                .then(snapshot => {\r\n                    resolve(snapshot);\r\n                });\r\n        });\r\n    }\r\n    subscribeTo(collection: string, callback: Function) {\r\n        this.db.collection(collection).onSnapshot(function(querySnapshot) {\r\n            const newArr: any = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                const item = doc.data();\r\n                item._id = doc.id;\r\n                newArr.push(item);\r\n            });\r\n            callback(newArr);\r\n        });\r\n    }\r\n    async getAll(collection: string) {\r\n        return await this.db.collection(collection).get();\r\n    }\r\n}\r\n\r\nexport default new Firebase();\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst Header: FunctionComponent<RouteComponentProps> = props => {\r\n    return (\r\n        <header className=\"App-header bg-dark\">\r\n            <div className=\"flex-row\">\r\n                <img className=\"App-logo\" src=\"/logo.svg\" alt=\"\" />\r\n                <h1>Scoreland</h1>\r\n                <Link to=\"/highscores\" className=\"push-horizontal button button--small\">\r\n                    Highscores\r\n                </Link>\r\n            </div>\r\n            <div className=\"flex-row\">\r\n                {props.authed ? (\r\n                    <>\r\n                        <div onClick={logout} className=\"push-horizontal button button--small button--serious button--danger\">\r\n                            Logout\r\n                        </div>\r\n                        <div className=\"push-horizontal\">Hi, {localStorage.getItem(\"user\")}</div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"push-horizontal\">Not logged in</div>\r\n                )}\r\n            </div>\r\n        </header>\r\n    );\r\n    async function logout() {\r\n        console.log(\"trying to log out\");\r\n        await firebase.logout().then(() => {\r\n            props.setAuth(false);\r\n        });\r\n    }\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div>hello from auth</div>\r\n);","import React from 'react';\r\nexport default () => <div className=\"lds-ripple\"><div></div><div></div></div>\r\n","import React, { useState } from 'react';\r\nimport firebase from '../firebase';\r\nimport Loading from '../components/Loading';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SignIn(props) {\r\nconst [loading, setLoading] = useState<boolean>(false);\r\nconst [email, setEmail] = useState('');\r\nconst [password, setPassword] = useState('');\r\n\r\nreturn !loading ? (\r\n    <form className=\"form content-section content-center push-vertical bg-neutral\" onSubmit={e => {\r\n        e.preventDefault();\r\n        login();\r\n      }}>\r\n      <h2>🎈welcome to <span className=\"title\">SCORELAND</span>🕹️</h2>\r\n      <h2><span className=\"text-warning\">get ready</span> and <span className=\"text-success\">login</span> to adventure</h2>\r\n      <label className=\"push-top\">Email:</label>\r\n      <input className=\"form__input\" type=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n      <label>Password:</label>\r\n      <input className=\"form__input\" type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n      <div className=\"flex-row full-width\">\r\n        <input className=\"form__input button button--funky button--serious button--small\" type=\"submit\" value=\"Sign In 🔫\" />\r\n        <Link to={{pathname: '/register'}} className=\"button button--danger button--serious button--small\">Register 📝</Link>\r\n      </div>\r\n    </form>\r\n) : <Loading />\r\nasync function login() {\r\n    setLoading(true);\r\n    try {\r\n      await firebase.login(email, password).then(e => {\r\n        localStorage.setItem('user', e.user.displayName);\r\n        props.setAuth(true);\r\n        props.history.push('/library');\r\n      });\r\n    } catch (err) {\r\n      alert(err)\r\n    }\r\n  }\r\n}\r\n// ------------------- THIS IS HOW TO HANDLE LOGIN -------------------\r\n// firebase.auth().signInWithEmailAndPassword(email, password).then(function(user) {\r\n//   // user signed in\r\n// }).catch(function(error) {\r\n//    var errorCode = error.code;\r\n//    var errorMessage = error.message;\r\n\r\n//    if (errorCode === 'auth/wrong-password') {\r\n//        alert('Wrong password.');\r\n//    } else {\r\n//        alert(errorMessage);         \r\n//    }\r\n//    console.log(error);\r\n// });","import p5 from \"p5\";\r\nlet points = 0;\r\nlet balls: any = [];\r\nlet playRect;\r\nlet startGame = \"Press here to spawn a ball\";\r\n\r\nconst selfpong = function(finalScore: Function) {\r\n    return new p5(p => {\r\n        p.pointsCounter = function() {\r\n            p.textAlign(p.LEFT);\r\n            p.text(points, 10, 30);\r\n            p.textSize(12);\r\n            p.textAlign(p.CENTER);\r\n            p.text(startGame, p.width / 2, p.height / 2);\r\n            p.fill(255);\r\n        };\r\n\r\n        p.setup = () => {\r\n            p.createCanvas(660, 260).parent(\"myContainer\");\r\n            playRect = new Rectangle(160, 250, 70, 10, 5, 5);\r\n        };\r\n\r\n        // Ball appears;\r\n        p.mousePressed = () => {\r\n            if (balls.length < 3) {\r\n                balls.push(new Ball(p.mouseX, p.mouseY));\r\n            }\r\n            startGame = \"\";\r\n        };\r\n\r\n        p.draw = () => {\r\n            p.background(100);\r\n            p.fill(255);\r\n            p.textSize(16);\r\n            p.textAlign(p.LEFT);\r\n            p.text(\"control with right/left arrow\", 10, 50);\r\n            p.fill(22, 180, 200);\r\n            p.textSize(22);\r\n            p.pointsCounter();\r\n\r\n            playRect.displayRect();\r\n            playRect.keyIsDown();\r\n            playRect.fixed();\r\n            for (var i = 0; i < balls.length; i++) {\r\n                balls[i].display();\r\n                balls[i].move();\r\n                balls[i].ballWallHit();\r\n                balls[i].bounceOfRectangle();\r\n            }\r\n        };\r\n\r\n        class Rectangle {\r\n            private x;\r\n            private y;\r\n            private w;\r\n            private h;\r\n            private xspeed;\r\n            private yspeed;\r\n            constructor(xas, yas, w, h, xspeed, yspeed) {\r\n                this.x = xas;\r\n                this.y = yas;\r\n                this.w = w;\r\n                this.h = h;\r\n                this.xspeed = xspeed;\r\n                this.yspeed = yspeed;\r\n            }\r\n            displayRect() {\r\n                p.rectMode(p.CENTER);\r\n                p.fill(125, 220, 10);\r\n                p.rect(this.x, this.y, this.w, this.h);\r\n            }\r\n\r\n            // movement by arrows\r\n            keyIsDown() {\r\n                if (p.keyIsDown(p.RIGHT_ARROW)) {\r\n                    this.x = this.x + this.xspeed;\r\n                } else if (p.keyIsDown(p.LEFT_ARROW)) {\r\n                    this.x = this.x - this.xspeed;\r\n                }\r\n            }\r\n\r\n            // if rectangle hits the wall it stops\r\n            fixed() {\r\n                this.x = p.constrain(this.x, 25, p.width - 25);\r\n            }\r\n        }\r\n\r\n        class Ball {\r\n            private x;\r\n            private y;\r\n            private xspeed;\r\n            private yspeed;\r\n            private r;\r\n            constructor(x, y) {\r\n                this.x = x;\r\n                this.y = y;\r\n                this.xspeed = -5;\r\n                this.yspeed = -6;\r\n                this.r = 20;\r\n            }\r\n\r\n            display() {\r\n                p.fill(255);\r\n                p.ellipse(this.x, this.y, this.r, this.r);\r\n            }\r\n            // speed of the ball\r\n            move() {\r\n                this.x = this.x + this.xspeed;\r\n                this.y = this.y + this.yspeed;\r\n            }\r\n            // if it hits the wall it goes other direction\r\n            ballWallHit() {\r\n                if (this.x > p.width || this.x <= 0) {\r\n                    this.xspeed = this.xspeed * -1;\r\n                }\r\n                if (this.y < 5) {\r\n                    this.yspeed = this.yspeed * -1;\r\n                }\r\n            }\r\n\r\n            // when Ball hits the rectangle it bounces back and gets the point\r\n            bounceOfRectangle() {\r\n                // if (playRect.x > this.x) console.log(this.y);\r\n                if (this.y >= 240 && this.y <= 245 && this.x < playRect.x + playRect.w / 2 && this.x > playRect.x - playRect.w / 2) {\r\n                    this.yspeed = this.yspeed * -1;\r\n                    if (this.xspeed > 0) {\r\n                        this.xspeed = Math.floor(Math.random() * 5);\r\n                    } else {\r\n                        this.xspeed = Math.floor(Math.random() * -4);\r\n                    }\r\n                    //adds +1 point on hit\r\n                    points = points + 1;\r\n                }\r\n\r\n                if (this.y > 290) {\r\n                    finalScore(points);\r\n                    p.remove();\r\n                    p.clear();\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nexport { selfpong };\r\n","import p5 from \"p5\";\r\nimport { Pipe } from \"./pipe\";\r\nimport { Bird } from \"./bird\";\r\n\r\nlet bird;\r\nconst pipes: Array<Pipe> = [];\r\nlet points: number = 0;\r\n\r\nexport const scorebird = function(finalScore: Function) {\r\n    return new p5(p => {\r\n        p.setup = () => {\r\n            p.createCanvas(800, 260).parent(\"myContainer\");\r\n            bird = new Bird(p);\r\n            pipes.push(new Pipe(p));\r\n        };\r\n\r\n        p.draw = () => {\r\n            p.background(0);\r\n            for (let i = pipes.length - 1; i >= 0; i--) {\r\n                pipes[i].show();\r\n                pipes[i].update();\r\n\r\n                if (pipes[i].hits(bird)) {\r\n                    finalScore(points);\r\n                    p.remove();\r\n                    p.clear();\r\n                }\r\n\r\n                if (pipes[i].offscreen()) {\r\n                    pipes.splice(i, 1);\r\n                }\r\n\r\n                if (pipes[i].isPoint(bird)) {\r\n                    points++;\r\n                }\r\n            }\r\n\r\n            bird.update();\r\n            bird.show();\r\n\r\n            if (p.frameCount % 45 == 0) {\r\n                pipes.push(new Pipe(p));\r\n            }\r\n        };\r\n\r\n        p.keyPressed = e => {\r\n            if (e.key == \" \") {\r\n                bird.up();\r\n                //console.log(\"SPACE\");\r\n            }\r\n        };\r\n    });\r\n};\r\n","import React, {FunctionComponent} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Game } from '../models/Game.model';\r\n\r\nconst GameButton: FunctionComponent<{game: Game}> = ({game}) => {\r\n    const complexityColor = game.complexity < 2 ? 'text-success' : (game.complexity >= 2 && game.complexity < 4 ? 'text-warning' : 'text-danger');\r\n    const toLink = (str) => str.split(' ').join('-')\r\n    return (\r\n      <Link className=\"grid-box__item bg-light button button--funky\"\r\n        to={{\r\n          pathname: \"/game/\" + game._id,\r\n          state: { game }\r\n        }}>\r\n        <h2 className=\"title\">{game.name}</h2>\r\n        <img className=\"image\" src={game.imagelink} alt=\"\"/>\r\n        <h4>Complexity: <span className={complexityColor}>{game.complexity}</span></h4>\r\n        <p>Highest score: <span>{game.highestScore}</span></p>\r\n        <p>By: <span>{game.highestScorer}🤩</span></p>\r\n      </Link>\r\n    );\r\n}\r\nexport default GameButton","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { Game } from \"../models/Game.model\";\r\nimport GameButton from \"../components/GameButton\";\r\nimport { selfpong } from \"../gamesLogic/selfpong/selfpong\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst GameLibrary: FunctionComponent<{ games: Array<Game> }> = props => {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const gamesExist: boolean = props.games.length > 0;\r\n    return <React.Fragment>{gamesExist ? props.games.map((game: Game) => <GameButton key={game._id} game={game} />) : <Loading />}</React.Fragment>;\r\n};\r\n\r\nexport default GameLibrary;\r\n\r\n// const [count, setCount] = useState(0);\r\n// <button onClick={() => setCount(count + 1)}>\r\n//   Click me {count}\r\n// </button>\r\n","import React, { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport GameLibrary from \"../containers/GameLibrary\";\r\nimport Firebase from \"../firebase\";\r\nimport { Game } from \"../models/Game.model\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\ninterface State {\r\n    games: Array<Game>;\r\n}\r\n\r\nclass App extends Component<RouteComponentProps<any>, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            games: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        Firebase.getAll(\"games\").then(games => {\r\n            // console.group(\"Games from firebase:\");\r\n            // games.forEach(function(doc) {\r\n            //     console.log(doc.id, \" => \", doc.data());\r\n            // });\r\n            // console.groupEnd();\r\n        });\r\n        Firebase.subscribeTo(\"games\", (gameArr: Array<Game>) => {\r\n            this.setState({\r\n                games: gameArr\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"content-section grid-box push-vertical\">\r\n                    <GameLibrary games={this.state.games} />\r\n                </div>\r\n                <a className=\"link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    A Link to somewhere\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export default new class Motivation {\r\n    private quotesArr;\r\n\tconstructor() {\r\n\t\tthis.quotesArr = [ '“Believe in yourself! Have faith in your abilities! Without a humble but reasonable confidence in your own powers you cannot be successful or happy.”',\r\n        \"Where there is a will, there is a way. If there is a chance in a million that you can do something, anything, to keep what you want from ending, do it. Pry the door open or, if need be, wedge your foot in that door and keep it open.\",\r\n        \"Do not wait; the time will never be ‘just right‘.\",\r\n        \"Start where you stand, and work with whatever tools you may have at your command, and better tools will be found as you go along.\",\r\n        \"Press forward. Do not stop, do not linger in your journey, but strive for the mark set before you.\",\r\n        \"The future belongs to those who believe in the beauty of their dreams.\",\r\n        \"Aim for the moon. If you miss, you may hit a star.\",\r\n        \"Don’t watch the clock; do what it does. Keep going.\",\r\n        \"Keep your eyes on the stars, and your feet on the ground.\",\r\n        \"We aim above the mark to hit the mark.\",\r\n        \"One way to keep momentum going is to have constantly greater goals.\",\r\n        \"Change your life today. Don’t gamble on the future, act now, without delay.\",\r\n        \"You just can’t beat the person who never gives up.\",\r\n        \"Start where you are. Use what you have. Do what you can.\",\r\n        \"Why should you continue going after your dreams? Because seeing the look on the faces of the people who said you couldn’t… will be priceless.\",\r\n        \"Never give up, for that is just the place and time that the tide will turn.\",\r\n        \"The Way Get Started Is To Quit Talking And Begin Doing.\",\r\n        \"The Pessimist Sees Difficulty In Every Opportunity. The Optimist Sees Opportunity In Every Difficulty.\",\r\n        \"Don’t Let Yesterday Take Up Too Much Of Today.\",\r\n        \"You Learn More From Failure Than From Success. Don’t Let It Stop You. Failure Builds Character.\",\r\n        \"It’s Not Whether You Get Knocked Down, It’s Whether You Get Up.\" ]\r\n\t}\r\n\r\n\tgetRandomQuote = (): string => this.quotesArr[Math.floor((Math.random() * this.quotesArr.length))];\r\n}\r\n","import React from \"react\";\r\n\r\nexport default ({ text, link, modifier }) => (\r\n    <a className={`grid-box__item content-center bg-light button button--${modifier}`} href={link}>\r\n        {text}\r\n    </a>\r\n);\r\n","export class Pipe {\r\n    spacing: number = 110;\r\n    top: number = this.p5.random(this.p5.height / 8, (3 / 4) * this.p5.height);\r\n    bottom: number = this.p5.height - (this.top + this.spacing);\r\n    x: number = this.p5.width;\r\n    w: number = 60;\r\n    speed: number = 8;\r\n    highlight: boolean = false;\r\n    private potential: boolean = true;\r\n\r\n    constructor(public p5) {}\r\n\r\n    hits(bird) {\r\n        if (bird.y < this.top || bird.y > this.p5.height - this.bottom) {\r\n            if (bird.x > this.x && bird.x < this.x + this.w) {\r\n                this.highlight = true;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        this.highlight = false;\r\n        return false;\r\n    }\r\n\r\n    isPoint(bird) {\r\n        if (this.potential && (bird.x > this.x && bird.x < this.x + this.w)) {\r\n            this.potential = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    show() {\r\n        this.p5.fill(255);\r\n        if (this.highlight) {\r\n            this.p5.fill(255, 0, 0);\r\n        }\r\n        this.p5.rect(this.x, 0, this.w, this.top);\r\n        this.p5.rect(this.x, this.p5.height - this.bottom, this.w, this.bottom);\r\n    }\r\n\r\n    update() {\r\n        this.x -= this.speed;\r\n    }\r\n\r\n    offscreen() {\r\n        if (this.x < -this.w) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","export class Bird {\r\n    y = this.p5.height / 2;\r\n    x = 64;\r\n    gravity = 0.4;\r\n    lift = -10;\r\n    velocity = 0;\r\n    constructor(public p5) {}\r\n\r\n    show() {\r\n        this.p5.fill(255);\r\n        this.p5.ellipse(this.x, this.y, 32, 32);\r\n    }\r\n\r\n    up() {\r\n        this.velocity += this.lift;\r\n    }\r\n\r\n    update() {\r\n        this.velocity += this.gravity;\r\n        // this.velocity *= 0.9;\r\n        this.y += this.velocity;\r\n\r\n        if (this.y > this.p5.height) {\r\n            this.y = this.p5.height;\r\n            this.velocity = 0;\r\n        }\r\n\r\n        if (this.y < 0) {\r\n            this.y = 0;\r\n            this.velocity = 0;\r\n        }\r\n    }\r\n}\r\n","import p5 from \"p5\";\r\nlet numSegments = 10;\r\nlet direction = \"right\";\r\n\r\nconst xStart = 0; //starting x coordinate for snake\r\nconst yStart: number = 250; //starting y coordinate for snake\r\nconst diff: number = 10;\r\n\r\nlet xCor: Array<number> = [];\r\nlet yCor: Array<number> = [];\r\n\r\nlet xFruit = 0;\r\nlet yFruit = 0;\r\nlet score = 0;\r\n\r\nexport const scuffedsnake = function(finalScore: Function) {\r\n    return new p5(p => {\r\n        p.setup = () => {\r\n            p.text(score, 10, 30);\r\n            p.textSize(12);\r\n            p.textAlign(p.CENTER);\r\n            p.fill(255);\r\n\r\n            p.createCanvas(500, 500).parent(\"myContainer\");\r\n            p.frameRate(15);\r\n            p.stroke(255);\r\n            p.strokeWeight(10);\r\n            updateFruitCoordinates();\r\n\r\n            for (let i: number = 0; i < numSegments; i++) {\r\n                xCor.push(xStart + i * diff);\r\n                yCor.push(yStart);\r\n            }\r\n        };\r\n\r\n        p.draw = () => {\r\n            p.background(0);\r\n            for (let i = 0; i < numSegments - 1; i++) {\r\n                p.line(xCor[i], yCor[i], xCor[i + 1], yCor[i + 1]);\r\n            }\r\n            updateSnakeCoordinates();\r\n            checkGameStatus();\r\n            checkForFruit();\r\n        };\r\n\r\n        /*\r\n         The segments are updated based on the direction of the snake.\r\n         All segments from 0 to n-1 are just copied over to 1 till n, i.e. segment 0\r\n         gets the value of segment 1, segment 1 gets the value of segment 2, and so on,\r\n         and this results in the movement of the snake.\r\n        \r\n         The last segment is added based on the direction in which the snake is going,\r\n         if it's going left or right, the last segment's x coordinate is increased by a\r\n         predefined value 'diff' than its second to last segment. And if it's going up\r\n         or down, the segment's y coordinate is affected.\r\n        */\r\n        function updateSnakeCoordinates() {\r\n            for (let i = 0; i < numSegments - 1; i++) {\r\n                xCor[i] = xCor[i + 1];\r\n                yCor[i] = yCor[i + 1];\r\n            }\r\n            switch (direction) {\r\n                case \"right\":\r\n                    xCor[numSegments - 1] = xCor[numSegments - 2] + diff;\r\n                    yCor[numSegments - 1] = yCor[numSegments - 2];\r\n                    break;\r\n                case \"up\":\r\n                    xCor[numSegments - 1] = xCor[numSegments - 2];\r\n                    yCor[numSegments - 1] = yCor[numSegments - 2] - diff;\r\n                    break;\r\n                case \"left\":\r\n                    xCor[numSegments - 1] = xCor[numSegments - 2] - diff;\r\n                    yCor[numSegments - 1] = yCor[numSegments - 2];\r\n                    break;\r\n                case \"down\":\r\n                    xCor[numSegments - 1] = xCor[numSegments - 2];\r\n                    yCor[numSegments - 1] = yCor[numSegments - 2] + diff;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        /*\r\n         I always check the snake's head position xCor[xCor.length - 1] and\r\n         yCor[yCor.length - 1] to see if it touches the game's boundaries\r\n         or if the snake hits itself.\r\n        */\r\n        function checkGameStatus() {\r\n            if (\r\n                xCor[xCor.length - 1] > p.width ||\r\n                xCor[xCor.length - 1] < 0 ||\r\n                yCor[yCor.length - 1] > p.height ||\r\n                yCor[yCor.length - 1] < 0 ||\r\n                checkSnakeCollision()\r\n            ) {\r\n                p.noLoop();\r\n                finalScore(score);\r\n                p.remove();\r\n                p.clear();\r\n            }\r\n        }\r\n\r\n        /*\r\n         If the snake hits itself, that means the snake head's (x,y) coordinate\r\n         has to be the same as one of its own segment's (x,y) coordinate.\r\n        */\r\n        function checkSnakeCollision() {\r\n            const snakeHeadX = xCor[xCor.length - 1];\r\n            const snakeHeadY = yCor[yCor.length - 1];\r\n            for (let i = 0; i < xCor.length - 1; i++) {\r\n                if (xCor[i] === snakeHeadX && yCor[i] === snakeHeadY) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n         Whenever the snake consumes a fruit, I increment the number of segments,\r\n         and just insert the tail segment again at the start of the array (basically\r\n         I add the last segment again at the tail, thereby extending the tail)\r\n        */\r\n        function checkForFruit() {\r\n            p.point(xFruit, yFruit);\r\n            if (xCor[xCor.length - 1] === xFruit && yCor[yCor.length - 1] === yFruit) {\r\n                score++;\r\n                xCor.unshift(xCor[0]);\r\n                yCor.unshift(yCor[0]);\r\n                numSegments++;\r\n                updateFruitCoordinates();\r\n            }\r\n        }\r\n\r\n        function updateFruitCoordinates() {\r\n            /*\r\n            The complex math logic is because I wanted the point to lie\r\n            in between 100 and width-100, and be rounded off to the nearest\r\n            number divisible by 10, since I move the snake in multiples of 10.\r\n          */\r\n\r\n            xFruit = p.floor(p.random(10, (p.width - 100) / 10)) * 10;\r\n            yFruit = p.floor(p.random(10, (p.height - 100) / 10)) * 10;\r\n        }\r\n\r\n        p.keyPressed = () => {\r\n            switch (p.keyCode) {\r\n                case 74:\r\n                    if (direction !== \"right\") {\r\n                        direction = \"left\";\r\n                    }\r\n                    break;\r\n                case 76:\r\n                    if (direction !== \"left\") {\r\n                        direction = \"right\";\r\n                    }\r\n                    break;\r\n                case 73:\r\n                    if (direction !== \"down\") {\r\n                        direction = \"up\";\r\n                    }\r\n                    break;\r\n                case 75:\r\n                    if (direction !== \"up\") {\r\n                        direction = \"down\";\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n    });\r\n};\r\n","import React, { FunctionComponent, useEffect, useState, Component } from \"react\";\r\nimport { unmountComponentAtNode } from \"react-dom\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport { Game } from \"../models/Game.model\";\r\nimport DynamicButtoon from \"../components/DynamicButton\";\r\nimport Motivation from \"../motivationalQuotes\";\r\nimport CountUp from \"react-countup\";\r\nimport RouterButton from \"../components/RouterButton\";\r\nimport LinkButton from \"../components/LinkButton\";\r\nimport Loading from \"../components/Loading\";\r\n// Games\r\nimport { selfpong } from \"../gamesLogic/selfpong/selfpong\";\r\nimport { scorebird } from \"../gamesLogic/scorebird/sketch\";\r\nimport { scuffedsnake } from \"../gamesLogic/scoresnake/sketch\";\r\nexport default class GamePage extends Component<RouteComponentProps, any> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gameCanvas: null,\r\n            gameInfo: { name: \"\", complexity: 0, highestScore: 0, highestScorer: \"\", _id: \"\" },\r\n            gameLost: false,\r\n            score: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const gameId = this.props.match.params.id;\r\n        console.log(gameId);\r\n        firebase.getOneById(\"games\", gameId).then(data => {\r\n            const game: Game = data.data();\r\n            game._id = data.id;\r\n            this.setState({\r\n                gameInfo: game\r\n            });\r\n            this.startGame();\r\n        });\r\n    }\r\n\r\n    startGame = () => {\r\n        console.log(\"received: \" + this.state.gameInfo.name);\r\n        switch (this.state.gameInfo.name) {\r\n            case \"Self pong\":\r\n                selfpong(score => {\r\n                    this.setState({\r\n                        gameLost: true,\r\n                        score\r\n                    });\r\n                    this.tryUpdateScore(score);\r\n                    return;\r\n                });\r\n                break;\r\n            case \"Scorebird\":\r\n                scorebird(score => {\r\n                    this.setState({\r\n                        gameLost: true,\r\n                        score\r\n                    });\r\n                    this.tryUpdateScore(score);\r\n                    return;\r\n                });\r\n                break;\r\n            case \"Scuffed Snake\":\r\n                scuffedsnake(score => {\r\n                    this.setState({\r\n                        gameLost: true,\r\n                        score\r\n                    });\r\n                    this.tryUpdateScore(score);\r\n                });\r\n                break;\r\n            default:\r\n            // code block\r\n        }\r\n    };\r\n\r\n    tryUpdateScore = score => {\r\n        if (score > this.state.gameInfo.highestScore) {\r\n            firebase.updateHighestScore(this.state.gameInfo._id, score, localStorage.getItem(\"user\"));\r\n        }\r\n    };\r\n\r\n    clearCanvas = () => {\r\n        this.setState({\r\n            gameCanvas: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return this.state.gameInfo ? (\r\n            <div className=\"content-section content-center\">\r\n                {/* <RouterButton text=\"Go Back\" link=\"/library\" modifier=\"danger\" /> */}\r\n                <LinkButton modifier=\"danger\" text=\"Go back\" link=\"/library\" />\r\n                <h1 className=\"title\">{this.state.gameInfo.name}</h1>\r\n                {this.state.gameLost ? (\r\n                    <div className=\"content-center\">\r\n                        <h2>\r\n                            <CountUp end={this.state.score} className=\"title\" prefix=\"score: \" />\r\n                        </h2>\r\n                        <p>{Motivation.getRandomQuote()}</p>\r\n                        <div className=\"grid-box\">\r\n                            <LinkButton text=\"Go Back\" link=\"/library\" modifier=\"danger\" />\r\n                            {/* <DynamicButtoon clickHandler={this.restartGame} name=\"Restart!\" info={Motivation.getRandomQuote()} /> */}\r\n                            <LinkButton modifier=\"success\" text=\"Restart\" link={\"/game/\" + this.state.gameInfo._id} />\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div id=\"myContainer\" />\r\n                )}\r\n            </div>\r\n        ) : (\r\n            <Loading />\r\n        );\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport firebase from '../firebase';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Register(props) {\r\nconst [nickname, setNickname] = useState('');\r\nconst [email, setEmail] = useState('');\r\nconst [password, setPassword] = useState('');\r\n\r\nreturn (\r\n    <form className=\"form content-section content-center push-vertical bg-neutral\" onSubmit={e => {\r\n        e.preventDefault();\r\n        onRegister();\r\n    }}>\r\n      <h2>We're happy to see you join!🎉🐮</h2>\r\n      <label className=\"push-top\">Nickname - how people will see you:</label>\r\n      <input className=\"form__input\" type=\"text\" value={nickname} onChange={e => setNickname(e.target.value)}/>\r\n      <label>Email:</label>\r\n      <input className=\"form__input\" name=\"email\" type=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n      <label>Password:</label>\r\n      <input className=\"form__input\" type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n      <div className=\"flex-row\">\r\n        <Link to={{pathname: '/login'}} className=\"form__input button button--danger button--serious button--small\">Go back</Link>\r\n        <input className=\"form__input button button--funky button--serious button--small\" type=\"submit\" value=\"Finish ✔️\" />\r\n      </div>\r\n    </form>\r\n)\r\nasync function onRegister() {\r\n    try {\r\n      await firebase.register(nickname, email, password);\r\n      props.history.replace('/library');\r\n    } catch (err) {\r\n      alert(err)\r\n    }\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  HashRouter,\n  Redirect,\n  Switch,\n} from 'react-router-dom'\nimport firebase from './firebase';\nimport Header from './containers/Header';\nimport Auth from './routes/Auth';\nimport Login from './routes/Login';\nimport Library from './routes/Library';\nimport NotFound from './routes/NotFound';\nimport GamePage from './routes/GamePage';\nimport Register from './routes/Register';\nimport Loading from './components/Loading';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst checkAuth = () => {\n  const token = localStorage.getItem('token');\n}\n\nfunction PrivateRoute ({component: Component, authed, ...rest}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authed\n        ? <Component {...props} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n    />\n  )\n}\n\nconst Scoreland = () => {\n  const [userAuthenticated, setUserAuthenticated] = useState<boolean>(false);\n  const [firebaseLoaded, setFirebaseLoaded] = useState<boolean>(false);\n\n  useEffect(() => {\n    window.addEventListener('load', function() {\n      const updateOnlineStatus = (event) => {\n        if (event.type == \"offline\") {\n          NotificationManager.warning('No network connection. Some functionalities might be unavailable', 'Offline mode', 5000)\n        } else {\n          NotificationManager.success('Your browser is online again', 'Online', 5000)\n        }\n      }\n    \n      window.addEventListener('online',  updateOnlineStatus);\n      window.addEventListener('offline', updateOnlineStatus);\n    });\n    firebase.isInitialized().then((user) => {\n      if (user) {\n        setUserAuthenticated(true);\n        setFirebaseLoaded(true);\n      }\n      else  {\n        setFirebaseLoaded(true);\n        setUserAuthenticated(false)\n      };\n    })\n  }, []);\n\n  return firebaseLoaded ? (\n    <BrowserRouter >\n      <Header setAuth={(e) => setUserAuthenticated(e)} authed={userAuthenticated}/>\n      <Switch>\n        <Route path=\"/login\" exact render={props => <Login {...props} setAuth={(e) => setUserAuthenticated(e)} />} />\n        <Route path=\"/register\" exact render={props => <Register {...props} />} />\n        <Route path=\"/auth\" exact render={props => <Auth {...props} />} />\n        <PrivateRoute authed={userAuthenticated} path=\"/library\" exact component={Library} />\n        <PrivateRoute authed={userAuthenticated} path=\"/game/:id\" exact component={GamePage} />\n        <Redirect from=\"/\" to='/library' />\n      </Switch>\n      <NotificationContainer/>\n    </BrowserRouter >\n  ) : <Loading />\n};\n/* <Redirect from=\"/\" to='/library' />\n<Route component={NotFound}></Route> */\nexport default Scoreland;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\"This web app is being served cache-first by a service \" + \"worker. To learn more, visit https://bit.ly/CRA-PWA\");\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\"New content is available and will be used when all \" + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}